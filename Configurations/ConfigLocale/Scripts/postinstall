#!/bin/bash

# A good candidate for a profile.
# This example has a plist payload, you could instead write the values programmatically as below. This would save you having to use a different
# package for every Locale you need to support.
# In my workflow I actually detect the gateway IP for each office and use that as a variable to decide which locale package should be received.
# You need to kill cprefs.

path_root="$3"; if [ -z "${path_root}" ] || [ "${path_root}" = "/" ]; then path_root=""; fi #++ fix //
device_os=$(defaults read "${path_root}/System/Library/CoreServices/SystemVersion" ProductVersion)	# 10.9 etc
apple_locale="en_AU"
apple_country="AU"
apple_measurementunits="Centimeters"
apple_metricunits="true"
keyboardlayout_name="Australian"
keyboardlayout_id="15"

# Default system locale
# You need to delete any existing USER GlobalPreferences to override them
# Setting the language with /usr/sbin/languagesetup -langspec used to zap this preference, but that doesn't seem to happen anymore
/usr/bin/defaults write "${path_root}/Library/Preferences/.GlobalPreferences.plist" AppleLocale -string "${apple_locale}"
/usr/bin/defaults write "${path_root}/Library/Preferences/.GlobalPreferences.plist" Country -string "${apple_country}"
/usr/bin/defaults write "${path_root}/Library/Preferences/.GlobalPreferences.plist" AppleMeasurementUnits -string "${apple_measurementunits}"
/usr/bin/defaults write "${path_root}/Library/Preferences/.GlobalPreferences.plist" AppleMetricUnits -bool "${apple_metricunits}"

# Ugly! Default loginwindow keyboard input
/bin/cat > "${path_root}/var/tmp/com.apple.HIToolbox.loginwindow.plist" << EOPROFILE
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AppleCurrentKeyboardLayoutInputSourceID</key>
	<string>com.apple.keylayout.${keyboardlayout_name}</string>
	<key>com.apple.HIToolbox</key>
	<dict>
		<key>AppleDefaultAsciiInputSource</key>
		<array>
			<string>${keyboardlayout_name}</string>
			<integer>${keyboardlayout_id}</integer>
			<string>Keyboard Layout</string>
		</array>
		<key>AppleEnabledInputSources</key>
		<array>
			<dict>
				<key>InputSourceKind</key>
				<string>Keyboard Layout</string>
				<key>KeyboardLayout ID</key>
				<integer>${keyboardlayout_id}</integer>
				<key>KeyboardLayout Name</key>
				<string>${keyboardlayout_name}</string>
			</dict>
		</array>
		<key>AppleSelectedInputSources</key>
		<array>
			<dict>
				<key>InputSourceKind</key>
				<string>Keyboard Layout</string>
				<key>KeyboardLayout ID</key>
				<integer>${keyboardlayout_id}</integer>
				<key>KeyboardLayout Name</key>
				<string>${keyboardlayout_name}</string>
			</dict>
		</array>
	</dict>
</dict>
</plist>
EOPROFILE
/usr/bin/plutil -convert binary1 "${path_root}/var/tmp/com.apple.HIToolbox.loginwindow.plist"
killall cfprefsd

# Ugly! Default system keyboard input
/bin/cat > "${path_root}/Library/Preferences/com.apple.HIToolbox.plist" << EOPROFILE
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AppleCurrentKeyboardLayoutInputSourceID</key>
	<string>com.apple.keylayout.${keyboardlayout_name}</string>
	<key>AppleDefaultAsciiInputSource</key>
	<dict>
		<key>InputSourceKind</key>
		<string>Keyboard Layout</string>
		<key>KeyboardLayout ID</key>
		<integer>${keyboardlayout_id}</integer>
		<key>KeyboardLayout Name</key>
		<string>${keyboardlayout_name}</string>
	</dict>
	<key>AppleEnabledInputSources</key>
	<array>
		<dict>
			<key>InputSourceKind</key>
			<string>Keyboard Layout</string>
			<key>KeyboardLayout ID</key>
			<integer>${keyboardlayout_id}</integer>
			<key>KeyboardLayout Name</key>
			<string>${keyboardlayout_name}</string>
		</dict>
	</array>
</dict>
</plist>
EOPROFILE
/usr/bin/plutil -convert binary1 "${path_root}/Library/Preferences/com.apple.HIToolbox.plist"
killall cfprefsd

# loop user home directories
if [ "${path_root}" != "/" ]; then
	# non-booted volume
	# check dscl for users UID > 500
	for u in $(dscl -f "${path_root}/var/db/dslocal/nodes/Default" localonly -readall /Local/Target/Users | grep RecordName | grep -v 'RecordName: _' | awk '{print $2}'); do
	user_id=$(dscl -f "${path_root}/var/db/dslocal/nodes/Default" localonly -read /Local/Target/Users/$u UniqueID | awk '{print $2}')
	if [ $user_id -gt 500 ]; then
		user_home=$(dscl -f "${path_root}/var/db/dslocal/nodes/Default" localonly -read /Local/Target/Users/$u NFSHomeDirectory | awk '{print $2}')
		if [ -e "${path_root}/${user_home}/Library/Preferences" ]; then
			# brute force, maybe not ideal for everyone.
			/bin/rm -f write "${path_root}${user_home}/Library/Preferences/.GlobalPreferences.plist"
			# or kill just locale
			#/usr/bin/defaults delete "${path_root}${user_home}/Library/Preferences/.GlobalPreferences.plist" AppleLanguages
			#/usr/bin/defaults delete "${path_root}${user_home}/Library/Preferences/.GlobalPreferences.plist" AppleLocale
			#/usr/bin/defaults delete "${path_root}${user_home}/Library/Preferences/.GlobalPreferences.plist" AppleMeasurementUnits
			#/usr/bin/defaults delete "${path_root}${user_home}/Library/Preferences/.GlobalPreferences.plist" AppleMetricUnits
			#/usr/sbin/chown "${user_id}" "${path_root}${user_home}/Library/Preferences/.GlobalPreferences.plist"
			# brute force, maybe not ideal for everyone.
			/bin/rm -f write "${path_root}${user_home}/Library/Preferences/com.apple.HIToolbox.plist"
			# or kill just locale
			#/usr/bin/defaults delete "${path_root}${user_home}/Library/Preferences/com.apple.HIToolbox.plist" AppleCurrentKeyboardLayoutInputSourceID
			#/usr/bin/defaults delete "${path_root}${user_home}/Library/Preferences/com.apple.HIToolbox.plist" AppleDefaultAsciiInputSource
			#/usr/bin/defaults delete "${path_root}${user_home}/Library/Preferences/com.apple.HIToolbox.plist" AppleEnabledInputSources
			#/usr/bin/defaults delete "${path_root}${user_home}/Library/Preferences/com.apple.HIToolbox.plist" AppleInputSourceHistory
			#/usr/bin/defaults delete "${path_root}${user_home}/Library/Preferences/com.apple.HIToolbox.plist" AppleSelectedInputSources
			#/usr/sbin/chown "${user_id}" "${user_home}/Library/Preferences/com.apple.HIToolbox.plist"
		fi
	fi
	done
	
else
	# booted volume
	# check dscl for users UID > 500
	for u in $(dscl . -ls /Users | grep -v '^_'); do
	user_id=$(dscl . -read /Users/$u UniqueID | awk '{print $2}')
	if [ $user_id -gt 500 ]; then
		user_home=$(dscl . -read /Users/$u NFSHomeDirectory | awk '{print $2}')
		if [ -e "${user_home}/Library/Preferences" ]; then
			# brute force, maybe not ideal for everyone.
			/bin/rm -f "${user_home}/Library/Preferences/.GlobalPreferences.plist"
			# or kill just locale
			#/usr/bin/defaults delete "${user_home}/Library/Preferences/.GlobalPreferences.plist" AppleLanguages
			#/usr/bin/defaults delete "${user_home}/Library/Preferences/.GlobalPreferences.plist" AppleLocale
			#/usr/bin/defaults delete "${user_home}/Library/Preferences/.GlobalPreferences.plist" AppleMeasurementUnits
			#/usr/bin/defaults delete "${user_home}/Library/Preferences/.GlobalPreferences.plist" AppleMetricUnits
			#/usr/sbin/chown "${user_id}" "${user_home}/Library/Preferences/.GlobalPreferences.plist"
			# brute force, maybe not ideal for everyone.
			/bin/rm -f "${user_home}/Library/Preferences/com.apple.HIToolbox.plist"
			# or kill just locale
			#/usr/bin/defaults delete "${user_home}/Library/Preferences/com.apple.HIToolbox.plist" AppleCurrentKeyboardLayoutInputSourceID
			#/usr/bin/defaults delete "${user_home}/Library/Preferences/com.apple.HIToolbox.plist" AppleDefaultAsciiInputSource
			#/usr/bin/defaults delete "${user_home}/Library/Preferences/com.apple.HIToolbox.plist" AppleEnabledInputSources
			#/usr/bin/defaults delete "${user_home}/Library/Preferences/com.apple.HIToolbox.plist" AppleInputSourceHistory
			#/usr/bin/defaults delete "${user_home}/Library/Preferences/com.apple.HIToolbox.plist" AppleSelectedInputSources
			#/usr/sbin/chown "${user_id}" "${user_home}/Library/Preferences/com.apple.HIToolbox.plist"
			killall cfprefsd
		fi
	fi
	done
fi

exit 0